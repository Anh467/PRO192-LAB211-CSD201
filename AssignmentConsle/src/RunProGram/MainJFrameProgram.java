package RunProGram;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import java.util.ArrayList;
import DTO.*;
import GUI.*;
import exception.*;
import io.FileIO;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.nio.file.Paths;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelListener;
public class MainJFrameProgram extends javax.swing.JFrame {
    public static ArrayList<Student> stList= new ArrayList<>();
    public static DefaultTableModel model;
    public static int count=0;
    public static MainJFrameProgram it;
    public static String draft;
    public static ErrorMessage error;

    public static void setUpdate(String toString, String text, String text0, String text1, String text2, String text3) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    ErrorMessage error1;
    /**
     * Creates new form NewJFrame
     */
    public MainJFrameProgram() {
        initComponents();
        this.setLocationRelativeTo(null);
        stList= new ArrayList<>();
        model= (DefaultTableModel) jTable1.getModel();
        it= this;
        
    }   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        menuBar2 = new java.awt.MenuBar();
        menu3 = new java.awt.Menu();
        menu4 = new java.awt.Menu();
        jTFid = new javax.swing.JTextField();
        jTFname = new javax.swing.JTextField();
        jTFmail = new javax.swing.JTextField();
        jTFaddress = new javax.swing.JTextField();
        jTFmark1 = new javax.swing.JTextField();
        jTFmark2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLBmark1 = new javax.swing.JLabel();
        jLBmark2 = new javax.swing.JLabel();
        jOption = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jtableStatus = new javax.swing.JLabel();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        menu3.setLabel("File");
        menuBar2.add(menu3);

        menu4.setLabel("Edit");
        menuBar2.add(menu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFnameActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("name");

        jLabel3.setText("mail");

        jLabel4.setText("address");

        jLBmark1.setText("Java mark");

        jLBmark2.setText("Css mark");

        jOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student IT", "Student BIZ" }));
        jOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOptionActionPerformed(evt);
            }
        });

        jButton1.setText("CLEAR TABLE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("VIEW");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("FIND");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("DELETE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("UPDATE BY ID");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("SORT");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("LIST BETWEEN A-B");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("TOP 5 STUDENT");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("SAVE TO FILE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("READ FROM FILE");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "stt", "Major", "ID", "Name", "Mail", "Address", "Mark1", "Mark2", "Average"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(50);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(1).setMinWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(2).setMinWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(220);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(220);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(220);
            jTable1.getColumnModel().getColumn(4).setMinWidth(220);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(220);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(220);
            jTable1.getColumnModel().getColumn(5).setMinWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(6).setMinWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(7).setMinWidth(100);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(8).setMinWidth(100);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(100);
        }

        jButton12.setText("EXIT");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel7.setText("                  !!!WELCOME TO MY MANNGER!!!");

        jButton13.setText("RESET");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jtableStatus.setText("                                                     Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1091, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLBmark2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTFmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTFmark2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTFname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTFmark1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTFid, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTFaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLBmark1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jOption, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton13)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jtableStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(0, 18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton8)
                    .addComponent(jButton11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLBmark1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFmark1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton6)
                    .addComponent(jButton9)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLBmark2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFmark2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton7)
                    .addComponent(jButton10)
                    .addComponent(jButton12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jtableStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean checkFill(){
        if("".equalsIgnoreCase(jTFid.getText())==true)
            return false;
        if("".equalsIgnoreCase(jTFaddress.getText())==true)
            return false;
        if("".equalsIgnoreCase(jTFmail.getText())==true)
            return false;
        if("".equalsIgnoreCase(jTFmark1.getText())==true)
            return false;
        if("".equalsIgnoreCase(jTFmark2.getText())==true)
            return false;
        if("".equalsIgnoreCase(jTFname.getText())==true)
            return false;
        return true;

    }
    private boolean checkExistID(String ID){
        for(int i= 0; i<stList.size(); i++)
            if(ID.equalsIgnoreCase(stList.get(i).getId())==true)
                return false;
        return true;
    }
    public static int checkExit(String str, String text){
        if("name".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getName().toLowerCase().contains(text.toLowerCase())==true)
                    return i;
        }
        else if("id".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getId().equalsIgnoreCase(text)==true)
                        return i;
        }
        else if("address".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getAddress().equalsIgnoreCase(text)==true)
                        return i;
        }
        else if("email".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getEmail().equalsIgnoreCase(text)==true)
                        return i;
    }
        return -1;
    }
    public static void setData( String str, String text){
        deleteTable();
        if(checkExit(str, text)==-1){
            error= new ErrorMessage("!!!INFORMATION YOU NEED TO FIND NOT EXIST!!!", 0);
            error.setVisible(true);
        }
        else{
        if("name".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getName().toLowerCase().contains(text.toLowerCase())==true)
                    if(stList.get(i) instanceof IT)
                        model.addRow(new Object[]{
                        count++, "StudentIT", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"Java :"+ ((IT)stList.get(i)).getJava(),"Css :"+ ((IT)stList.get(i)).getCss(),stList.get(i).ave()
                        });
                    else model.addRow(new Object[]{
                        count++, "StudentBiz", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"accountint :"+ ((BIZ)stList.get(i)).getMarket(), "marketing :"+((BIZ)stList.get(i)).getMarket(),stList.get(i).ave()
                        });
            error= new ErrorMessage("!!!FIND SUCCESSFULL!!!", 1);
            error.setVisible(true);
        }
        else if("id".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getId().equalsIgnoreCase(text)==true)
                    if(stList.get(i) instanceof IT)
                        model.addRow(new Object[]{
                        count++, "StudentIT", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"Java :"+ ((IT)stList.get(i)).getJava(),"Css :"+ ((IT)stList.get(i)).getCss(),stList.get(i).ave()
                        });
                    else model.addRow(new Object[]{
                        count++, "StudentBiz", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"accountint :"+ ((BIZ)stList.get(i)).getMarket(), "marketing :"+((BIZ)stList.get(i)).getMarket(),stList.get(i).ave()
                        });
            error= new ErrorMessage("!!!FIND SUCCESSFULL!!!", 1);
            error.setVisible(true);
        }
        else if("address".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getAddress().equalsIgnoreCase(text)==true)
                    if(stList.get(i) instanceof IT)
                        model.addRow(new Object[]{
                        count++, "StudentIT", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"Java :"+ ((IT)stList.get(i)).getJava(),"Css :"+ ((IT)stList.get(i)).getCss(),stList.get(i).ave()
                        });
                    else model.addRow(new Object[]{
                        count++, "StudentBiz", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"accountint :"+ ((BIZ)stList.get(i)).getMarket(), "marketing :"+((BIZ)stList.get(i)).getMarket(),stList.get(i).ave()
                        });
            error= new ErrorMessage("!!!FIND SUCCESSFULL!!!", 1);
            error.setVisible(true);
        }
        else if("email".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getEmail().equalsIgnoreCase(text)==true)
                    if(stList.get(i) instanceof IT)
                        model.addRow(new Object[]{
                        count++, "StudentIT", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"Java :"+ ((IT)stList.get(i)).getJava(),"Css :"+ ((IT)stList.get(i)).getCss(),stList.get(i).ave()
                        });
                    else model.addRow(new Object[]{
                        count++, "StudentBiz", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"accountint :"+ ((BIZ)stList.get(i)).getMarket(), "marketing :"+((BIZ)stList.get(i)).getMarket(),stList.get(i).ave()
                        });
            error= new ErrorMessage("!!!FIND SUCCESSFULL!!!", 1);
            error.setVisible(true);
    }}}
    public static void setDelData(String str, String text){
        if("name".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getName().equalsIgnoreCase(text)==true){
                    stList.remove(i);
                    error= new ErrorMessage("!!!DELETE NAME "+text+" SUCCESFULLL!!!", 1);
                    error.setVisible(true);
                }
        }
        else if("id".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getId().equalsIgnoreCase(text)==true){
                    stList.remove(i);
                    error= new ErrorMessage("!!!DELETE ID "+text+" SUCCESFULLL!!!", 1);
                    error.setVisible(true);
                }
        }
        else if("address".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getAddress().equalsIgnoreCase(text)==true){
                    stList.remove(i); 
                    error= new ErrorMessage("!!!DELETE ADDRESS "+text+" SUCCESFULLL!!!", 1);
                    error.setVisible(true);
                }
        }
        else if("email".equalsIgnoreCase(str)==true){
            for(int i=0;i<stList.size(); i++)
                if(stList.get(i).getEmail().equalsIgnoreCase(text)==true){
                    stList.remove(i);
                    error= new ErrorMessage("!!!DELETE EMAIL "+text+" SUCCESFULLL!!!", 1);
                    error.setVisible(true);
                }
    }
    }
    public static int findID(String id){
        for(int i=0; i< stList.size(); i++)
            if(id.equalsIgnoreCase(stList.get(i).getId()))
                return i;
        return -1;
    }
    public static String standardStatic(String str){
        char[] charArray= str.toCharArray();
        charArray[0]= Character.toUpperCase(str.charAt(0));
        int length= charArray.length;
        for(int i=1; i< length; i++)
                if(charArray[i]==' '){
                    while(charArray[i+1]==' '){
                        for(int j=i+1; j<length-1; j++)
                            charArray[j]=charArray[j+1];
                        length-=1;
                    }
                    charArray[i+1]= Character.toUpperCase(charArray[i+1]);
                }
        return String.valueOf(charArray).substring(0, length);
    }
    public static void setUpdate(String major, String id, String name, String email, String address, String mark1, String mark2){
        int k= findID(id);
        if(k==-1){
            error= new ErrorMessage("!!!ID NOT EXIST!!!",0);
                error.setVisible(true);
        }else{
            double d1=0 , d2 =0;
            try {
                
                check mCheck= new check();
                if("".equalsIgnoreCase(mark1)==false)
                    d1= Double.parseDouble(mark1);
                else if(stList.get(k) instanceof IT)
                    d1=((IT)stList.get(k)).getJava();
                else d1=((BIZ)stList.get(k)).getAccount();
                    
                if("".equalsIgnoreCase(mark2)==false)
                    d2= Double.parseDouble(mark2);
                else if(stList.get(k) instanceof IT)
                    d2=((IT)stList.get(k)).getCss();
                else d2=((BIZ)stList.get(k)).getMarket();
                if((d1<0)||(d2<0)||(d1>10)||(d2>10)) throw new ErrorSignal("MARK MUST BE POSITIVE AND LESS THAN 10");
                //if(stList.get(k))
                if("".equalsIgnoreCase(name))
                    name= stList.get(k).getName();
                    name= standardStatic(name);
                    //stList.get(k).setName(standardStatic(name.trim()));
                
                if("".equalsIgnoreCase(address))
                    address= standardStatic(stList.get(k).getAddress());
                    address= standardStatic(address);
                    //stList.get(k).setAddress(standardStatic(address.trim()));
                if("".equalsIgnoreCase(email)==false){
                    if(mCheck.checkMail(email.trim())==false) throw new ErrorSignal("Mail WRONG FORMAT. ex: /viet@fpt.edu.vn/");
                }else email= stList.get(k).getEmail();
                        stList.get(k).setEmail(email);
                stList.remove(k);
                if(major.equalsIgnoreCase("Student IT"))
                    stList.add(new IT(d2, d1, id, name, address, email));
                else stList.add(new BIZ(d2, d1, id, name, address, email));
                error= new ErrorMessage("!!!UPDATE ID" +id+" SUCCESSFULL!!!",1);
                error.setVisible(true);
            }catch(ErrorSignal e){
                error= new ErrorMessage("!!!"+e.getMessage()+"!!!",0);
                error.setVisible(true);
            } catch (Exception e) {
                error= new ErrorMessage("!!!MARK WRONG FORMAT!!!",0);
                error.setVisible(true);
            }
        }
    }
    public static void deleteTable(){
        int k= model.getRowCount();
        for(int i=0; i<k; i++){
        //   System.out.println("i");
            model.removeRow(0);
        }
    }
    public static void view(){
        deleteTable();
        count=1;
        for(int i=0; i< stList.size();i++){
            if(stList.get(i) instanceof IT)
                model.addRow(new Object[]{
                    count++, "StudentIT", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"Java :"+ ((IT)stList.get(i)).getJava(),"Css :"+ ((IT)stList.get(i)).getCss(),stList.get(i).ave()
                }
            );
            else model.addRow(new Object[]{
                    count++, "StudentBiz", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"accountint :"+ ((BIZ)stList.get(i)).getAccount(), "marketing :"+((BIZ)stList.get(i)).getMarket(),stList.get(i).ave()
                }
            );
        }
        error= new ErrorMessage("!!!VIEW SUCCFULL!!!",1);
        error.setVisible(true);
    }
    public static void sortName(){
        stList.sort((o1, o2) -> {
            return o1.getName().compareTo(o2.getName()); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/LambdaBody
        });
    }
    public String standard(String str){
        if("".equalsIgnoreCase(str)!=true){
        str= str.toLowerCase();
        char[] charArray= str.toCharArray();
        charArray[0]= Character.toUpperCase(str.charAt(0));
        int length= charArray.length;
        for(int i=1; i< length; i++)
                if(charArray[i]==' '){
                    while(charArray[i+1]==' '){
                        for(int j=i+1; j<length-1; j++)
                            charArray[j]=charArray[j+1];
                        length-=1;
                    }

                    charArray[i+1]= Character.toUpperCase(charArray[i+1]);
                }
        return String.valueOf(charArray).substring(0, length);
        }
        return str;
    }  
    public void trimAllTextFeild(){
        jTFname.setText(standard(jTFname.getText().trim()));
        jTFid.setText(jTFid.getText().trim());
        jTFmail.setText(jTFmail.getText().trim());
        jTFaddress.setText(standard(jTFaddress.getText().trim()));

    }
    public static void sortID(){
        stList.sort((o1, o2) -> {
            return o1.getId().compareTo(o2.getId()); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/LambdaBody
        });
    }
    public static void sortAddress(){
        stList.sort((o1, o2) -> {
            return o1.getAddress().compareTo(o2.getAddress()); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/LambdaBody
        });
    }
    public static void sortEmail(){
        stList.sort((o1, o2) -> {
            return o1.getEmail().compareTo(o2.getEmail()); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/LambdaBody
        });
    }
    public static void sortAve(){
        stList.sort((o1, o2) -> {
            return Double.compare(o1.ave(), o2.ave()); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/LambdaBody
        });
    }
    public static void setSort(String str){
        if("name".equalsIgnoreCase(str))
            sortName();
        else if ("id".equalsIgnoreCase(str))
            sortID();
        else if ("address".equalsIgnoreCase(str))
            sortAddress();
        else if ("email".equalsIgnoreCase(str))
            sortEmail();
        else if ("ave".equalsIgnoreCase(str))
            sortAve();
        error= new ErrorMessage("!!!YOU JUST SORT "+str.toUpperCase()+"!!!", 1);
        error.setVisible(true);
    }
    public static void setList(double d1, double d2){
        deleteTable();
        int c=0;
        if(d1>d2){
            d1-=d2;
            d2+=d1;
            d1=d2-d1;
        }
        for(int i=0; i<stList.size(); i++)
            if((stList.get(i).ave()>d1)&&(stList.get(i).ave()<d2)){
            if(stList.get(i) instanceof IT)
                model.addRow(new Object[]{
                    count++, "StudentIT", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"Java :"+ ((IT)stList.get(i)).getJava(),"Css :"+ ((IT)stList.get(i)).getCss(),stList.get(i).ave()
                }
            );
            else model.addRow(new Object[]{
                    count++, "StudentBiz", stList.get(i).getId(), stList.get(i).getName(), stList.get(i).getEmail(), stList.get(i).getAddress(),"accountint :"+ ((BIZ)stList.get(i)).getMarket(), "marketing :"+((BIZ)stList.get(i)).getMarket(),stList.get(i).ave()
                }
            );
                c++;
            }
            error= new ErrorMessage("!!!YOU LIST "+c+" STUDENT!!!", 1);
            error.setVisible(true);
    }
    public void succesfull(String str){
        jtableStatus.setForeground(Color.GREEN);
        jtableStatus.setHorizontalAlignment(SwingConstants.CENTER);
        jtableStatus.setVerticalAlignment(SwingConstants.CENTER);
        jtableStatus.setText("!!!"+str+" SUCCESFULL!!!");
    }
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String str= Paths.get("").toAbsolutePath().toString();
            String path=str+"/src/resource/stu.txt";
        if(FileIO.saveFile(stList, path)){
            error= new ErrorMessage("!!!SAVE FILE SUCCESSFULL!!!", 1);
            error.setVisible(true);
        }
        else {ErrorMessage error= new ErrorMessage("!!!WRITE TO FILE FAIL!!!",0);
                error.setVisible(true);
        }              
    }//GEN-LAST:event_jButton10ActionPerformed
 
    private void jTFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFnameActionPerformed

    }//GEN-LAST:event_jTFnameActionPerformed
    public static void setAddUpdate(String major, int i, String id, String name, String email, String address, double mark1, double mark2){
        stList.remove(i);
        if("Student IT".equalsIgnoreCase(major)){
            stList.add(new IT(mark2, mark1, id, name, address, email));
        }else{
            stList.add(new BIZ(mark2, mark1, id, name, address, email));
        }
        error= new ErrorMessage("!!!UPDATE SUCCESSFULL!!!",1);
        error.setVisible(true);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        check mCheck= new check();
        trimAllTextFeild();
        if(checkFill()==false){
            ErrorMessage error= new ErrorMessage("!!!ALL TEXT FIELD MUST BE FILL!!!",0);
            error.setVisible(true);
        }else if(checkExistID(jTFid.getText())==false){
            double mark1=0, mark2=0;
                try {
                    mark1= Double.parseDouble(jTFmark1.getText());
                    mark2= Double.parseDouble(jTFmark2.getText());
                    int k= findID(jTFid.getText());
                    if((mark1<0)||(mark2<0)||(mark1>10)||(mark2>10)) throw new ErrorSignal("MARK MUST BE POSITIVE AND LESS THAN 10");
                    if(mCheck.checkID(jTFid.getText().trim())==false) throw new ErrorSignal("ID WRONG FORMAT. ex: /DE160170/");
                    if(mCheck.checkMail(jTFmail.getText().trim())==false) throw new ErrorSignal("Mail WRONG FORMAT. ex: /viet@fpt.edu.vn/");
                    AddUpdate addUpdate= new AddUpdate((String)jOption.getSelectedItem(), k, jTFid.getText(), jTFname.getText(), jTFmail.getText(), jTFaddress.getText(), mark1, mark2);
                    addUpdate.setVisible(true);
                } catch(ErrorSignal e){
                    error= new ErrorMessage("!!!"+e.getMessage()+"!!!",0);
                    error.setVisible(true);
                }catch (Exception e) {
                    ErrorMessage error= new ErrorMessage("!!!MARK WRONG FORMAT!!!",0);
                    error.setVisible(true);
                }
        }else{
            if(jOption.getSelectedItem()=="Student IT"){
                double mark1=0, mark2=0;
                try {
                    mark1= Double.parseDouble(jTFmark1.getText());
                    mark2= Double.parseDouble(jTFmark2.getText());
                    if((mark1<0)||(mark2<0)||(mark1>10)||(mark2>10)) throw new ErrorSignal("MARK MUST BE POSITIVE AND LESS THAN 10");
                    if(mCheck.checkID(jTFid.getText().trim())==false) throw new ErrorSignal("ID WRONG FORMAT. ex: /DE160170/");
                    if(mCheck.checkMail(jTFmail.getText().trim())==false) throw new ErrorSignal("Mail WRONG FORMAT. ex: /viet@fpt.edu.vn/");
                    stList.add(new IT(mark2, mark1, jTFid.getText(), jTFname.getText(), jTFaddress.getText(), jTFmail.getText()));
                    error= new ErrorMessage("!!!ADD SUCCESSFULL!!!",1);
                    error.setVisible(true);
                }catch(ErrorSignal e){
                    error= new ErrorMessage("!!!"+e.getMessage()+"!!!",0);
                    error.setVisible(true);
                } catch (Exception e) {
                    ErrorMessage error= new ErrorMessage("!!!MARK WRONG FORMAT!!!",0);
                    error.setVisible(true);
                }
                
            }else{
                double mark1=0, mark2=0;
                try {
                    mark1= Double.parseDouble(jTFmark1.getText());
                    mark2= Double.parseDouble(jTFmark2.getText());
                    if((mark1<0)||(mark2<0)||(mark1>10)||(mark2>10)) throw new ErrorSignal("MARK MUST BE POSITIVE AND LESS THAN 10");
                    if(mCheck.checkID(jTFid.getText().trim())==false) throw new ErrorSignal("ID WRONG FORMAT. ex: /DE160170/");
                    if(mCheck.checkMail(jTFmail.getText().trim())==false) throw new ErrorSignal("Mail WRONG FORMAT. ex: /viet@fpt.edu.vn/");
                    stList.add(new BIZ(mark2, mark1, jTFid.getText(), jTFname.getText(), jTFaddress.getText(), jTFmail.getText()));
                    error= new ErrorMessage("!!!ADD SUCCESSFULL!!!",1);
                    error.setVisible(true);
                }catch(ErrorSignal e){
                    error= new ErrorMessage("!!!"+e.getMessage()+"!!!",0);
                    error.setVisible(true);
                }
                catch (Exception e) {
                    ErrorMessage error= new ErrorMessage("!!!MARK WRONG FORMAT!!!",0);
                    error.setVisible(true);
                }
                
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(stList.size()==0){
            error1= new ErrorMessage("!!!LIST IS EMPTY!!!",0);
            error1.setVisible(true);}
        else{
            view();
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
         try {
            
            String ID="",name="", address="", mail="";
            double mark1= 0, mark2= 0;
            int k, c=0;
            String str= Paths.get("").toAbsolutePath().toString();
            String path=str+"/src/resource/stu.txt";
            FileInputStream fos = new FileInputStream(path);
            InputStreamReader osw = new InputStreamReader(fos);
            BufferedReader bw = new BufferedReader(osw);
            String line= bw.readLine();
            while(line!=null){
                int count=0,i, j=0;
                for(i=0;i<line.length();i++){
                    if(line.charAt(i)=='/'){
                        count++;
                        switch(count){
                            case 1: ID= line.substring(j,i);         
                                    break;
                            case 2: name= line.substring(j,i);  
                                    break;
                            case 3: address= line.substring(j,i);
                                    break;
                            case 4: mail=line.substring(j,i);    
                                    break;
                            case 5: mark1= Double.parseDouble(line.substring(j,i));         
                                    break;  
                            case 6: mark2= Double.parseDouble(line.substring(j,i));         
                                    break;         
                        }
                        if(count==6)
                            break;
                        j= i+1;  
                    }
                }   
                    k=Integer.parseInt(line.substring(i+1,line.length()));
                    if((checkExistID(ID)==true)&&(mark1>=0)&&(mark2>=0)&&(mark1<=10)&&(mark2<=10)){
                        if(k==0)
                            stList.add(new IT(mark2, mark1, ID, name, address, mail));
                        else stList.add(new BIZ(mark2, mark1, ID, name, address, mail));
                        c++;
                    }
                        line= bw.readLine();
                }
            error= new ErrorMessage("!!!YOU JUST ADD "+c+" STUDENT!!!", 1);
            error.setVisible(true);
        fos.close();
        osw.close();
        bw.close();     
        } catch (Exception e) {
            e.printStackTrace(); 
            ErrorMessage error= new ErrorMessage("!!!READ FAIL!!!",0);
            error.setVisible(true);
    }         
    
    }//GEN-LAST:event_jButton11ActionPerformed
    public int findName(String name){
        for(int i=0; i< stList.size(); i++)
            if(name.equalsIgnoreCase(stList.get(i).getName()))
                return i;
        return -1;
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here
        NewJFrameFind form= new NewJFrameFind();
        form.setVisible(true);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOptionActionPerformed
        // TODO add your handling code here:
        if(jOption.getSelectedItem().equals("Student IT")){
            jLBmark1.setText("Java Mark");
            jLBmark2.setText("Css Mark");
        }
        if(jOption.getSelectedItem().equals("Student BIZ")){
            jLBmark1.setText("Accounting Mark");
            jLBmark2.setText("Marketing Css");
        }
    }//GEN-LAST:event_jOptionActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null,"Do you want to exit?","exit",JOptionPane.YES_NO_OPTION)!=JOptionPane.YES_NO_OPTION) {
                } else {
                    dispose();
                }   
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        NewJFrameDelete del= new NewJFrameDelete();
        del.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        deleteTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        UpDate update= new UpDate();
        update.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        SortFrame sortFrame= new SortFrame();
        sortFrame.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        ListFrame sortFrame= new ListFrame();
        sortFrame.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int[] ii={-1,-1,-1,-1,-1};
        double[] m={0,0,0,0,0};
        for(int i=0;i<stList.size();i++){
            for(int j=0;j<5;j++){
                if(m[j]<stList.get(i).ave()){
                    for(int k=4;k>j;k--){
                        m[k]=m[k-1];
                        ii[k]=ii[k-1];
                    }
                    m[j]=stList.get(i).ave();
                    ii[j]=i;
                    break;
                }
            }
        }
        deleteTable();
        count=0;
        for(int j=0; j<5; j++){
            if(ii[j]!=-1)
                if(stList.get(ii[j]) instanceof IT)
                    model.addRow(new Object[]{
                            count++, "StudentIT", stList.get(ii[j]).getId(), stList.get(ii[j]).getName(), stList.get(ii[j]).getEmail(), stList.get(ii[j]).getAddress(),"Java :"+ ((IT)stList.get(ii[j])).getJava(),"Css :"+ ((IT)stList.get(ii[j])).getCss(),stList.get(ii[j]).ave()
                        }
                    );
                    else model.addRow(new Object[]{
                            count++, "StudentBiz", stList.get(ii[j]).getId(), stList.get(ii[j]).getName(), stList.get(ii[j]).getEmail(), stList.get(ii[j]).getAddress(),"accountint :"+ ((BIZ)stList.get(ii[j])).getAccount(), "marketing :"+((BIZ)stList.get(ii[j])).getMarket(), stList.get(ii[j]).ave()
                        }
                    );
        }      
            error= new ErrorMessage("!!!LIST TOP 5 STUDENT SUCCESSFULL!!!", 1);
            error.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed
    public int getLocal(String str){
        for(int i=0; i<str.length(); i++)
            if(str.charAt(i)==':')
                return i+1;
        return -1;
    }    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
                jTFid.setText((String) model.getValueAt(jTable1.getSelectedRow(), 2));
                jTFaddress.setText((String) model.getValueAt(jTable1.getSelectedRow(), 5));
                jTFname.setText((String) model.getValueAt(jTable1.getSelectedRow(), 3));
                    int i= getLocal((String) model.getValueAt(jTable1.getSelectedRow(), 6));
                jTFmark1.setText(((String) model.getValueAt(jTable1.getSelectedRow(), 6)).substring(i,((String) model.getValueAt(jTable1.getSelectedRow(), 6)).length()));
                    i= getLocal((String) model.getValueAt(jTable1.getSelectedRow(), 7));
                jTFmark2.setText(((String) model.getValueAt(jTable1.getSelectedRow(), 7)).substring(i,((String) model.getValueAt(jTable1.getSelectedRow(), 7)).length()));
                jTFmail.setText((String) model.getValueAt(jTable1.getSelectedRow(), 4));
                if(((String) model.getValueAt(jTable1.getSelectedRow(), 1)).equalsIgnoreCase("StudentIT"))
                    jOption.setSelectedIndex(0);
                else
                    jOption.setSelectedIndex(1);
//                Student IT
//Student BIZ
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        jTFid.setText("");
        jTFaddress.setText("");
        jTFmail.setText("");
        jTFmark1.setText("");
        jTFmark2.setText("");
        jTFname.setText("");
    }//GEN-LAST:event_jButton13ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formKeyPressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_DELETE){
             model.removeRow(jTable1.getSelectedRow());
        }

    }//GEN-LAST:event_jTable1KeyPressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrameProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrameProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrameProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrameProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrameProgram().setVisible(true);
                
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLBmark1;
    private javax.swing.JLabel jLBmark2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> jOption;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFaddress;
    private javax.swing.JTextField jTFid;
    private javax.swing.JTextField jTFmail;
    private javax.swing.JTextField jTFmark1;
    private javax.swing.JTextField jTFmark2;
    private javax.swing.JTextField jTFname;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jtableStatus;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.Menu menu3;
    private java.awt.Menu menu4;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    // End of variables declaration//GEN-END:variables
}
